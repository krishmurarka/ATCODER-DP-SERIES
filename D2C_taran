void solving()
{
   
   int n;
   cin>>n;
   //string s;cin>>s;
   ll a[n];
   for(int i=0;i<n;i++)
   {
     cin>>a[i];
   }
   
   ll prefix[n]={};
   for(int i=0;i<n;i++)
   {    
        prefix[i]+=a[i];
        if(i!=0)prefix[i]+=prefix[i-1];
   }
   
   

   int start_left=0;
   int curr_partition_left=1;
   ll ans=1e9;



   int end_right=n;
   int curr_partition_right=0;
   for(int i=2;i<n-1;i++)
   {
      // left partition 

      int end_left=i-1;

      ll sum_left=prefix[end_left];

      ll left_right_part=sum_left-prefix[curr_partition_left-1];
      ll left_left_part=prefix[curr_partition_left-1];
      
      ll diff=abs(left_left_part- left_right_part);

      ll temp_left_left_part=left_left_part;
      ll temp_left_right_part=left_right_part;

      for(int j=curr_partition_left;j<i;j++)
      {
          temp_left_left_part+=a[j];
          temp_left_right_part-=a[j];
          // if(i==4)
          // {
          //   cout<<"hi \n";
          //   cout<<temp_left_left_part<<" "<<temp_left_right_part<<"\n";
          // }
          ll new_diff=abs(temp_left_left_part- temp_left_right_part);
          if(new_diff< diff)
          {
            diff=new_diff;
            curr_partition_left=j+1;

            left_left_part=temp_left_left_part;
            left_right_part=temp_left_right_part;
          }else{
            break;
          }
      }



      // right partition: 
      curr_partition_right=max(curr_partition_right,i+1);

      ll start=i;

      ll sum_right=prefix[n-1]-prefix[i-1];

      // cout<<sum_right<<"\n";
      ll right_left_part=prefix[curr_partition_right-1]-prefix[i-1];
      ll right_right_part=sum_right- right_left_part;

      // cout<<right_left_part<<"\n";
      ll diff_right=abs(right_left_part-right_right_part);


      ll temp_left=right_left_part;
      ll temp_right=right_right_part;
      for(int j=curr_partition_right;j<n;j++)
      {
            temp_left+=a[j];
            temp_right-=a[j];

            ll new_diff=abs(temp_left-temp_right);

            if(new_diff< diff_right)
            {
                diff=new_diff;
                curr_partition_right=j+1;
                right_right_part=temp_right;
                right_left_part=temp_left;
            }else break;
      }


        // partition done :  

        ll maxi =max({right_left_part,right_right_part,left_left_part,left_right_part});
        ll mini =min({right_left_part,right_right_part,left_left_part,left_right_part});

        ans=min(ans, maxi-mini);

   }
   cout<<ans<<"\n";
}
